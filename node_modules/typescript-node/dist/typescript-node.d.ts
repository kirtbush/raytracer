import * as TS from 'typescript';
import { BaseError } from 'make-error';
export declare const VERSION: string;
export declare const EXTENSIONS: string[];
export interface Options {
    compiler?: string;
    configFile?: string;
    ignoreWarnings?: string[];
    isEval?: boolean;
    ignoreAll?: boolean;
    getFile?: (fileName: string) => string;
    getVersion?: (fileName: string) => string;
}
export declare function register(opts?: Options): (fileName: string) => string;
export declare function getVersion(fileName: string): string;
export declare function getFile(fileName: string): string;
export declare function getDiagnostics(service: TS.LanguageService, fileName: string, options: Options): TS.Diagnostic[];
export declare function formatDiagnostic(diagnostic: TS.Diagnostic, ts: typeof TS, cwd?: string): string;
export declare function getSourceMap(map: string, fileName: string, code: string): string;
export declare class TypeScriptError extends BaseError {
    name: string;
}
