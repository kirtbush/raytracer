export declare type TSConfig = {
    compilerOptions?: any;
    files?: string[];
    exclude?: string[];
    filesGlob?: string[];
};
export declare const DEFAULTS: {
    target: string;
    module: string;
    declaration: boolean;
    noImplicitAny: boolean;
    removeComments: boolean;
};
export declare function resolve(dir: string, cb: (err: Error, filename?: string) => any): void;
export declare function resolveSync(dir: string): string;
export declare function load(dir: string, cb: (err: Error, config?: TSConfig) => any): void;
export declare function loadSync(dir: string): TSConfig;
export declare function readFile(filename: string, cb: (err: Error, config?: TSConfig) => any): void;
export declare function readFileSync(filename: string): TSConfig;
export declare function parseFile(contents: string, filename: string, cb: (err: Error, config?: TSConfig) => any): void;
export declare function parseFileSync(contents: string, filename: string): TSConfig;
export declare function resolveConfig(data: TSConfig, filename: string, cb: (err: Error, config?: TSConfig) => any): void;
export declare function resolveConfigSync(data: TSConfig, filename: string): TSConfig;
